// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String    @id @default(cuid())
  email              String    @unique
  name               String?
  password           String?   // Hashed password
  stripeCustomerId   String?   @unique
  subscriptionStatus String?   // active, trialing, past_due, canceled, unpaid
  subscriptionId     String?   @unique
  subscriptionPlan   String?   // starter, pro
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  
  scans              Scan[]
  
  @@index([email])
  @@index([stripeCustomerId])
}

model Scan {
  id           String         @id @default(cuid())
  userId       String
  targetUrl    String
  status       String         // pending, running, completed, failed
  results      Json?          // Store full scan results as JSON
  startedAt    DateTime       @default(now())
  completedAt  DateTime?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  
  user         User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  vulnerabilities Vulnerability[]
  
  @@index([userId])
  @@index([status])
  @@index([createdAt])
}

model Vulnerability {
  id           String    @id @default(cuid())
  scanId       String
  severity     String    // critical, high, medium, low, info
  title        String
  description  String    @db.Text
  cve          String?   // CVE identifier if applicable
  cvss         Float?    // CVSS score
  affected     String?   // Affected component/URL
  solution     String?   @db.Text
  aiAnalysis   Json?     // AI-generated insights and recommendations
  createdAt    DateTime  @default(now())
  
  scan         Scan      @relation(fields: [scanId], references: [id], onDelete: Cascade)
  
  @@index([scanId])
  @@index([severity])
  @@index([cve])
}